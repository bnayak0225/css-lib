@use "sass:math";

@mixin row($gutter: $grid-gutter-width, $breakpoints: $screen-breakpoints) {
  .row {
    display: flex;
    flex-wrap: wrap;
    margin-right: math.div(-$gutter, 2);
    margin-left: math.div(-$gutter, 2);
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
}
@mixin responsive-row($gutter: $grid-gutter-width, $breakpoints: $screen-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      .row.direction#{$infix}-column {
        flex-direction: column;
      }
      .row.direction#{$infix}-column-reverse {
        flex-direction: column-reverse;
      }
      .row.direction#{$infix}-row {
        flex-direction: row;
      }
      .row.direction#{$infix}-row-reverse {
        flex-direction: row-reverse;
      }
    }
  }
};

@mixin set-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage(math.div($size, $columns));
  max-width: percentage(math.div($size, $columns));
}

@mixin col($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $screen-breakpoints){
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: math.div($gutter, 2);
    padding-left: math.div($gutter, 2);
    box-sizing: border-box;
  }

  .col {
    @extend %grid-column
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @if $columns > 0 {
      // Allow columns to stretch full width below their breakpoints
      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @extend %grid-column;
        }
      }
    }
    .col#{$infix}, .col#{$infix}-auto {
      @extend %grid-column;
    }


  }
}
@mixin responsive-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $screen-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      $infix: breakpoint-infix($breakpoint, $breakpoints);
      @if $columns > 0 {
        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            flex: 0 0 percentage(math.div($i, $columns));
            max-width: percentage(math.div($i, $columns));
          }
        }
        .col#{$infix}-auto {
          flex: 0 0 auto;
          width: auto;
          max-width: 100%;
        }
        .col#{$infix} {
          flex-basis: 0;
          flex-grow: 1;
          max-width: 100%;
        }
      }
    }
  }

}

  @include row();
@include responsive-row();
@include col();
@include responsive-columns();

.no-gutters {
  margin-right: 0;
  margin-left: 0;
}

.no-gutters > .col,
.no-gutters > [class*="col-"] {
  padding-right: 0;
  padding-left: 0;
}

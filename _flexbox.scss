@use "sass:math";

@mixin make-row($gutter: $grid-gutter-width) {
  display: flex;
  flex-wrap: wrap;
  margin-right: math.div(-$gutter, 2);
  margin-left: math.div(-$gutter, 2);
};

@mixin set-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage(math.div($size, $columns));
  max-width: percentage(math.div($size, $columns));
}

@mixin make-col($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $screen-breakpoints){
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: math.div($gutter, 2);
    padding-left: math.div($gutter, 2);
  }

  %col-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }

  .col {
    @extend %grid-column
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @if $columns > 0 {
      // Allow columns to stretch full width below their breakpoints
      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @extend %grid-column;
        }
      }
    }
    .col#{$infix}, .col#{$infix}-auto {
      @extend %grid-column;
    }
    .col#{$infix}-auto {
      @extend %col-auto;
    }

  }
}
@mixin set-col-flex-size($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $screen-breakpoints) {

  @if $columns > 0 {
    @for $i from 1 through $columns {
      %set-col-#{$i} {
        flex: 0 0 percentage(math.div($i, $columns));
        max-width: percentage(math.div($i, $columns));
      }
      @each $breakpoint in map-keys($breakpoints) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);


        .col#{$infix}-#{$i} {
          @extend %set-col-#{$i};
        }
      }
    }
  }

}
.row {
  @include make-row();
}
@include make-col();
@include set-col-flex-size();
